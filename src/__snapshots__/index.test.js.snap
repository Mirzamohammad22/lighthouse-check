// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`@foo-software/lighthouse-trigger should match snapshot 1`] = `
Object {
  "lighthouseTrigger": [Function],
}
`;

exports[`lighthouseTrigger() on fail should return an expected response payload when all URLs failed to queue 1`] = `
Object {
  "code": "SOME_ERROR",
  "error": [Error: All URLs failed. Examine the "data" property of this error for details.],
}
`;

exports[`lighthouseTrigger() on fail should return an expected response payload when all URLs failed to queue due to max limit reached 1`] = `
Object {
  "code": "ERROR_QUEUE_MAX_USED_DAY",
  "error": [Error: Max limit of 5 triggers reached.],
}
`;

exports[`lighthouseTrigger() on fail should return an expected response payload when all some URLs failed to queue but some succeeded 1`] = `
Object {
  "code": "ERROR_ATTEMPT_FAILED",
  "error": [Error: Only some of your account URLs were enqueued. Examine the "data" property of this error for details. Typically this occurs when daily limit has been met for a given URL. Check your account limits online.],
}
`;

exports[`lighthouseTrigger() on fail should return an expected response payload when api key is invalid 1`] = `
Object {
  "code": "ERROR_UNAUTHORIZED",
  "error": [Error: Account wasn't found for the provided API token.],
}
`;

exports[`lighthouseTrigger() on fail should return an expected response payload when no pages are found 1`] = `
Object {
  "code": "ERROR_NO_URLS",
  "error": [Error: No URLs were found for this account.],
}
`;

exports[`lighthouseTrigger() on fail should return an expected response payload when no queue results are returned 1`] = `
Object {
  "code": "ERROR_NO_RESULTS",
  "error": [Error: No results.],
}
`;

exports[`lighthouseTrigger() on success should return an expected response payload 1`] = `
Object {
  "code": "SUCCESS",
  "data": Array [
    Object {
      "code": "SUCCESS_QUEUE_ADD",
      "status": 200,
    },
    Object {
      "code": "SUCCESS_QUEUE_ADD",
      "status": 200,
    },
  ],
  "message": "success! 2 URLs queued.",
}
`;
